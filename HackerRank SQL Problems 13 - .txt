01.

Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.
- a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).  a -> MIN(LAT_N) 
- b happens to equal the minimum value in Western Longitude (LONG_W in STATION). b -> MIN(LONG_W)
- c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).  c -> MAX(LAT_N)
- d happens to equal the maximum value in Western Longitude (LONG_W in STATION). d -> MAX(LONG_W)

Query the Manhatten Distance between points P1 and P2 and round it to a scale of 4 decimal places.


|Field		| Type         |
|---------------|--------------|
|ID		| NUMBER       |
|NAME		| VARCHAR2(17) |
|COUNTRY CODE	| VARCHAR2(3)  |
|DISTRICT	| VARCHAR2(20) |
|POPULATION	| NUMBER       |

Solution

P1(x1,y1) and P2(x2,y2)
Manhatten distance between p1 and p2 = |x1-x2| + |y1-y2|

x1 = MIN(LAT_N)
x2 = MAX(LAT_N)
y1 = MIN(LONG_W)
y2 = MAX(LONG_W)

SELECT ROUND((ABS(MIN(LAT_N)-MAX(LAT_N)) + ABS(MIN(LONG_W) - MAX(LONG_W))), 4)
FROM STATION;


02.

Write a query identifying the type of each record in the TRIANGLES table using 
its three side lengths. Output one of the following statements 

01. Equilateral : it's a triangle with 3 sides of equal length.
02. Isosceles : it's a triangle with 2 sides of equal length.
03. Scalene : it's a triangle with 3 sides of differencing lengths.
04. Not a Triangle : the given values of A,B,C don't from a triangle.


Input format

The TRIANGLE table is described as follows:

Columns		Type
A	 	Integer
B	 	Integer
C	 	Integer


Sample input

A	B	C
20	20	23
20	20	20
20	21	22
13	14	30


Sample Answer

SELECT CASE
WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle'
WHEN A = B AND B = C THEN 'Equilateral'
WHEN A = B OR B = C OR A = C THEN 'Isosceles'
ELSE 'Scalene'
END
FROM TRIANGLES;


03.

Generate the following two result sets:

1)
Query an alphabetically ordered list of all names in OCCUPATIONS, 
immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). 
For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).

2)
Query the number of ocurrences of each occupation in OCCUPATIONS. 
Sort the occurrences in ascending order, and output them in the following format:

There are a total of [occupation_count] [occupation]s.
where [occupation_count] is the number of occurrences of an occupation in OCCUPATIONS and [occupation] is the lowercase occupation name. 
If more than one Occupation has the same [occupation_count], they should be ordered alphabetically.

Note: There will be at least two entries in the table for each type of occupation.

Input Format

|column	     |	type   |
|------------|---------|
|name	     |	string |
|occupation  |	string |

The OCCUPATIONS table is described as follows:  
Occupation will only contain one of the following values: Doctor, Professor, Singer or Actor.

Sample Input

An OCCUPATIONS table that contains the following records:


|name        | occupation |
|------------|------------|
|samantha    |	Doctor    |
|julia       |	Actor     |
|maria       |	Actor     |
|meera       |  Singer    |
|ashely      |	Professor |
|ketty       |	Professor |
|christeen   |	Professor |
|jane        |  Actor     |
|jenny       |	Doctor    |
|priya       |	Singer    |


Sample Output

Ashely(P)
Christeen(P)
Jane(A)
Jenny(D)
Julia(A)
Ketty(P)
Maria(A)
Meera(S)
Priya(S)
Samantha(D)
There are a total of 2 doctors.
There are a total of 2 singers.
There are a total of 3 actors.
There are a total of 3 professors.

Sample answer: 

SELECT (name || '(' || SUBSTR(occupation,1,1) || ')') 
FROM occupations 
ORDER BY name;

SELECT ('There are a total of ' || COUNT(occupation) || ' ' || LOWER(occupation) || 's' || '.') 
FROM occupations 
GROUP BY occupation 
ORDER BY COUNT(occupation), occupation ASC




countinue from 18 -> 
countinue from 3 to 9 

